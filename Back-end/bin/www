#!/usr/bin/env node

var app = require('../app');
var debug = require('debug')('app:server');
var http = require('http');
var {serverPort} = require('../config/config');

var db = require('../db/utils');

// Create HTTP server with port.
app.set('port', serverPort);

var server = http.createServer(app);

// Listen on provided port, on all network interfaces.

var startServer = function () {
  server.listen(serverPort, '0.0.0.0');
  console.log('Server has been started on ' + serverPort + ' port');
  server.on('error', onError);
  server.on('listening', onListening);
};

// Connect to DB and start Server

db.setUpConnection()
  .on('error', console.log)
  .on('disconnected', db.setUpConnection)
  .once('open', startServer);

// Event listener for HTTP server "error" event.

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

// Event listener for HTTP server "listening" event.

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
